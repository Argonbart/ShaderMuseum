[gd_resource type="Shader" format=3 uid="uid://dis6r1wb8y2ar"]

[resource]
code = "shader_type canvas_item;

uniform bool active_mouse = true;
uniform vec2 screen_size;
uniform vec2 mouse_position;

float sdCircle(vec2 p, float r) {
    return length(p) - r;
}

void fragment() {

	float circle_line_thickness = 2.0;

	vec4 blue = vec4(0.0, 0.0, 1.0, 1.0);
	vec4 black = vec4(0.0, 0.0, 0.0, 0.0);
	vec4 red = vec4(1.0, 0.0, 0.0, 1.0);

	// screen stuff
	vec2 screen_uv = (SCREEN_UV * screen_size) / 1.5;
	vec2 mouse = mouse_position / 1.5;
	vec4 output_color = black;
	
	vec2 mouse_to_uv_vector = screen_uv - mouse;
	float distance_from_uv_to_next_object = texture_sdf(screen_uv_to_sdf(SCREEN_UV));
	float distance_to_next_object = texture_sdf(screen_uv_to_sdf(mouse_position / screen_size));
	float distance_to_mouse_circle = sdCircle(mouse_to_uv_vector, distance_to_next_object);
	
	if (distance_from_uv_to_next_object < 0.01) {
		output_color = blue;
	}
	
	if (active_mouse && distance_to_mouse_circle > -1.0 * circle_line_thickness && distance_to_mouse_circle < circle_line_thickness) {
		output_color = red;
	}
	
	if (distance_from_uv_to_next_object < 0.01) {
		COLOR = blue;
	} else {
		COLOR = output_color;
	}
}
"
